/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.chi.infolab.view;


import com.chi.infolab.model.Patient;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;

/**
 * @author OKC
 */
public class ViewPanel extends JPanel {
    Patient patient;

    public ViewPanel(Patient patient) {
        initComponents();
        jDateChooser.setDateFormatString("yyyy-MM-dd");
        this.patient = patient;
        RenderDate(patient);
    }

    private void RenderDate(Patient patient) {
        jTextFieldFirstName.setText(patient.getFirstName());
        jTextFieldLastName.setText(patient.getLastName());
        jTextFieldAge.setText(String.valueOf(patient.getAge()));
        jTextFieldPhoneNumber.setText(String.valueOf(patient.getNumber()));
        jTextFieldEmail.setText(patient.getEmail());
        jTextArea.setText(patient.getMessage());
        jDateChooser.setDate(patient.getDate());
        imgJLabel.setIcon(new ImageIcon(patient.getImage()));
        typeJComboBox.setSelectedItem(patient.getType());
        String gender = patient.getGender();
        if (gender.equals("Male")) {
            jRadioMale.setSelected(true);
        } else if (gender.equals("Female")) {
            jRadioFemale.setSelected(true);
        } else {
            jRadioOther.setSelected(true);
        }
    }

    /**
     * Creates new form FormPanel
     */
    public ViewPanel() {
        initComponents();
        jDateChooser.setDateFormatString("yyyy-MM-dd");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGender = new ButtonGroup();
        titleJLabel = new JLabel();
        jLabelFirstName = new JLabel();
        jTextFieldFirstName = new JTextField();
        jButtonSubmit = new JButton();
        jLabelLastName = new JLabel();
        jTextFieldLastName = new JTextField();
        jLabelAge = new JLabel();
        jLabelPhoneNumber = new JLabel();
        jLabelEmail = new JLabel();
        jTextFieldAge = new JTextField();
        jTextFieldPhoneNumber = new JTextField();
        jTextFieldEmail = new JTextField();
        jRadioMale = new JRadioButton();
        jLabel1 = new JLabel();
        jRadioFemale = new JRadioButton();
        jRadioOther = new JRadioButton();
        jLabelPhoto = new JLabel();
        jButtonUpload = new JButton();
        imgJLabel = new JLabel();
        jLabelPhoto1 = new JLabel();
        typeJComboBox = new JComboBox<>();
        jLabelPhoto2 = new JLabel();
        jScrollPane1 = new JScrollPane();
        jTextArea = new JTextArea();
        jLabel2 = new JLabel();
        jDateChooser = new com.toedter.calendar.JDateChooser();

        setBackground(new Color(204,255,204));

        titleJLabel.setFont(new Font("Microsoft YaHei UI", 1, 24)); // NOI18N
        titleJLabel.setText("Registration");

        jLabelFirstName.setText("FirstName:");

        jTextFieldFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFirstNameActionPerformed(evt);
            }
        });

        jButtonSubmit.setText("Submit");
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });

        jLabelLastName.setText("LastName:");

        jTextFieldLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLastNameActionPerformed(evt);
            }
        });

        jLabelAge.setText("Age:");

        jLabelPhoneNumber.setText("Phone Number:");

        jLabelEmail.setText("Email:");

        jTextFieldAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAgeActionPerformed(evt);
            }
        });

        jTextFieldPhoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPhoneNumberActionPerformed(evt);
            }
        });

        jTextFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmailActionPerformed(evt);
            }
        });

        buttonGroupGender.add(jRadioMale);
        jRadioMale.setText("Male");
        jRadioMale.setActionCommand("MALE");
        jRadioMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioMaleActionPerformed(evt);
            }
        });

        jLabel1.setText("Gender");

        buttonGroupGender.add(jRadioFemale);
        jRadioFemale.setText("Female");
        jRadioFemale.setActionCommand("FEMALE");

        buttonGroupGender.add(jRadioOther);
        jRadioOther.setText("Prefer Not To Say");
        jRadioOther.setActionCommand("OTHERS");

        jLabelPhoto.setText("Photo");

        jButtonUpload.setText("Upload");
        jButtonUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUploadActionPerformed(evt);
            }
        });

        imgJLabel.setMaximumSize(new Dimension(60, 80));
        imgJLabel.setMinimumSize(new Dimension(60, 80));
        imgJLabel.setPreferredSize(new Dimension(60, 80));

        jLabelPhoto1.setText("Type");

        typeJComboBox.setModel(new DefaultComboBoxModel<>(new String[]{"Walk In", "Appointment"}));
        typeJComboBox.setSelectedIndex(-1);
        typeJComboBox.setToolTipText("");
        typeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeJComboBoxActionPerformed(evt);
            }
        });

        jLabelPhoto2.setText("Massage");

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane1.setViewportView(jTextArea);

        jLabel2.setText("Date");

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabelEmail)
                                                        .addComponent(jLabelLastName)
                                                        .addComponent(jLabelFirstName)
                                                        .addComponent(jLabelAge))
                                                .addGap(46, 46, 46)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(jTextFieldAge, GroupLayout.PREFERRED_SIZE, 247, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jTextFieldFirstName, GroupLayout.PREFERRED_SIZE, 247, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jTextFieldLastName, GroupLayout.PREFERRED_SIZE, 247, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jTextFieldEmail, GroupLayout.PREFERRED_SIZE, 247, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(titleJLabel, GroupLayout.PREFERRED_SIZE, 185, GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabelPhoneNumber)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextFieldPhoneNumber, GroupLayout.PREFERRED_SIZE, 247, GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                                .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 66, GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabelPhoto, GroupLayout.PREFERRED_SIZE, 41, GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabelPhoto1, GroupLayout.PREFERRED_SIZE, 41, GroupLayout.PREFERRED_SIZE))
                                                        .addGap(42, 42, 42)
                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(jButtonUpload, GroupLayout.PREFERRED_SIZE, 78, GroupLayout.PREFERRED_SIZE)
                                                                        .addGap(36, 36, 36)
                                                                        .addComponent(imgJLabel, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE))
                                                                .addComponent(jRadioMale)
                                                                .addComponent(jRadioFemale)
                                                                .addComponent(jRadioOther)
                                                                .addComponent(typeJComboBox, GroupLayout.PREFERRED_SIZE, 228, GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                        .addComponent(jLabelPhoto2, GroupLayout.PREFERRED_SIZE, 66, GroupLayout.PREFERRED_SIZE)
                                                                        .addGap(42, 42, 42))
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 41, GroupLayout.PREFERRED_SIZE)
                                                                        .addGap(67, 67, 67)))
                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                .addComponent(jDateChooser, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 228, GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(143, 143, 143)
                                                .addComponent(jButtonSubmit, GroupLayout.PREFERRED_SIZE, 78, GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(titleJLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelFirstName)
                                        .addComponent(jTextFieldFirstName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextFieldLastName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabelLastName))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelAge)
                                        .addComponent(jTextFieldAge, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelPhoneNumber)
                                        .addComponent(jTextFieldPhoneNumber, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelEmail)
                                        .addComponent(jTextFieldEmail, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(13, 13, 13)
                                                .addComponent(jLabel1))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jRadioMale)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jRadioFemale)))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioOther)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                .addComponent(jButtonUpload)
                                                .addComponent(jLabelPhoto))
                                        .addComponent(imgJLabel, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(typeJComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabelPhoto1))
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(14, 14, 14)
                                                .addComponent(jLabelPhoto2))
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE)))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jDateChooser, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSubmit)
                                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFirstNameActionPerformed

    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed
        // TODO add your handling code here:
        try {
            String firstName = jTextFieldFirstName.getText();
            String lastName = jTextFieldLastName.getText();
            String age = jTextFieldAge.getText();
            String number = jTextFieldPhoneNumber.getText();
            String email = jTextFieldEmail.getText();
            String gender = buttonGroupGender.getSelection().getActionCommand();
            Date date = jDateChooser.getDate();

            if (!isValidAge(age)) {
                throw new IllegalArgumentException("Please enter a valid age.");
            }
            if (!isValidPhoneNumber(number)) {
                throw new IllegalArgumentException("Please enter a valid 10-digit number.");
            }
            if (!isValidEmail(email)) {
                throw new IllegalArgumentException("Please enter a valid email.");
            }
            if (this.imgJLabel.getIcon() == null) {
                throw new IllegalArgumentException("Please upload an image.");
            }
            if (!isValidType(typeJComboBox.getSelectedItem().toString())) {
                throw new IllegalArgumentException("Please select a type.");
            }
            if (!isValidDate(date)) {
                throw new IllegalArgumentException("Date can not after today.");
            }


            JPanel panel = new JPanel();
            panel.setLayout(new BorderLayout(10, 10));

            String userInfoHtml = "<html>" +
                    "<body>" +
                    "Name: " + firstName + " " + lastName + "<br>" +
                    "Age: " + age + "<br>" +
                    "Phone Number: " + number + "<br>" +
                    "Email: " + email + "<br>" +
                    "Gender: " + gender + "<br>" +
                    "Type: " + typeJComboBox.getSelectedItem() + "<br>" +
                    "Message: " + jTextArea.getText() + "<br>" +
                    "</body>" +
                    "</html>";

            JLabel infoLabel = new JLabel(userInfoHtml);
            panel.add(infoLabel, BorderLayout.NORTH);
            JLabel photoLabel = new JLabel("", this.imgJLabel.getIcon(), JLabel.CENTER);
            panel.add(photoLabel, BorderLayout.CENTER);
            Patient patient = new Patient();
            patient.setFirstName(firstName);
            patient.setLastName(lastName);
            patient.setAge(Integer.parseInt(age));
            patient.setNumber(number);
            patient.setEmail(email);
            patient.setGender(gender);
            patient.setImage(((ImageIcon) this.imgJLabel.getIcon()).getImage());
            patient.setType(typeJComboBox.getSelectedItem().toString());
            patient.setMessage(jTextArea.getText());
            patient.setDate(date);
            JOptionPane.showMessageDialog(this, panel, "User Information", JOptionPane.INFORMATION_MESSAGE);
        } catch (NullPointerException ne) {
            String errorMessage = "You must enter values";
            JOptionPane.showMessageDialog(this, errorMessage);
        } catch (IllegalArgumentException ie) {
            JOptionPane.showMessageDialog(this, ie.getMessage());
        } catch (Exception e) {
            System.out.println("Exception has occured");
        }
    }//GEN-LAST:event_jButtonSubmitActionPerformed


    // Method to validate phone number
    private boolean isValidPhoneNumber(String phoneNumber) {
        String phoneRegex = "^\\d{10}$"; // You can adjust this regex based on format requirements
        return phoneNumber.matches(phoneRegex);
    }

    // Method to validate email address
    private boolean isValidEmail(String email) {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@" +
                "(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        return email.matches(emailRegex);
    }

    public static boolean isValidAge(String str) {
        return str.matches("\\d+");
    }

    // Method to validate date
    private boolean isValidDate(Date date) {
        LocalDate now = LocalDate.now();
        LocalDate pDate = date.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();
        return !pDate.isAfter(now);
    }

    private boolean isValidType(String type) {
        return type != null && !type.isEmpty();
    }

    private void jTextFieldLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLastNameActionPerformed

    private void jTextFieldAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAgeActionPerformed

    private void jTextFieldPhoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPhoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPhoneNumberActionPerformed

    private void jTextFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEmailActionPerformed

    private void jRadioMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioMaleActionPerformed

    private void jButtonUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUploadActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        if (file.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedImage img = ImageIO.read(file.getSelectedFile());
                Image edited_image = img.getScaledInstance(60, 80,
                        Image.SCALE_SMOOTH);
                if (edited_image != null) {
                    this.imgJLabel.setIcon(new ImageIcon(edited_image));
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Please upload image correctly correctly.", " Error - Incorrect image", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButtonUploadActionPerformed

    private void typeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ButtonGroup buttonGroupGender;
    private JLabel imgJLabel;
    private JButton jButtonSubmit;
    private JButton jButtonUpload;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabelAge;
    private JLabel jLabelEmail;
    private JLabel jLabelFirstName;
    private JLabel jLabelLastName;
    private JLabel jLabelPhoneNumber;
    private JLabel jLabelPhoto;
    private JLabel jLabelPhoto1;
    private JLabel jLabelPhoto2;
    private JRadioButton jRadioFemale;
    private JRadioButton jRadioMale;
    private JRadioButton jRadioOther;
    private JScrollPane jScrollPane1;
    private JTextArea jTextArea;
    private JTextField jTextFieldAge;
    private JTextField jTextFieldEmail;
    private JTextField jTextFieldFirstName;
    private JTextField jTextFieldLastName;
    private JTextField jTextFieldPhoneNumber;
    private JLabel titleJLabel;
    private JComboBox<String> typeJComboBox;
    // End of variables declaration//GEN-END:variables
}
